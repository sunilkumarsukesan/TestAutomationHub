name: 'TestRun_2025.07.$(Build.BuildId)'
trigger: none

resources:
  pipelines:
    - pipeline: deployPipeline  # alias
      source: TestAutomationHub
      trigger:
        branches:
          include:
            - main

variables:
  SCREENSHOT_STRATEGY: 'always'

stages:
  - stage: SonarQube
    displayName: 'SonarQube Analysis'
    jobs:
      - job: RunSonar
        displayName: 'Run SonarQube and Validate Gate'
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npx sonar-scanner \
                -Dsonar.projectKey=TestingFramework \
                -Dsonar.sources=. \
                -Dsonar.host.url=http://20.17.97.4:9000 \
                -Dsonar.token=$(SonarToken)
            displayName: 'Run SonarQube Scan'

  - stage: Test
    displayName: 'Run Tests'
    dependsOn: SonarQube
    condition: succeeded()
    jobs:
      - job: RunTests
        pool:
          name: Default
        steps:
          - script: |
              echo "ðŸ§ª Running tests..."
              npm run test
            displayName: 'Run Tests'

  - stage: Report
    displayName: 'ðŸ“„ Publish Test Report'
    dependsOn: Test
    condition: succeededOrFailed()
    jobs:
      - job: PublishReport
        pool:
          name: Default
        steps:
          - task: PublishPipelineArtifact@1
            displayName: 'ðŸ“„ Publish Test Report'
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/reports'
              artifact: 'TestExecution_Report'
